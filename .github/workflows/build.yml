name: Build Project

on:
  push:
    branches:
      - main
  
  pull_request:
    branches:
      - main
  
  workflow_dispatch:

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        id: version
        uses: codacy/git-version@2.8.0
        with:
          release-branch: main
          prefix: v

      - name: Repository Tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::notice:: ${{ steps.version.outputs.version }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push --tags
        if: github.ref == 'refs/heads/main'

  backend-build-test:
    needs: versioning
    name: Build And Test Backend Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up .Net Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
          cache: true
          cache-dependency-path: './src/**/packages.lock.json'

      - name: Restore
        run: dotnet restore ./src/Todo.Api.sln

      - name: Build
        run: dotnet build --no-restore ./src/Todo.Api.sln --configuration Release

      - name: Test
        run: dotnet test ./src/Todo.Api.sln --no-restore --no-build --configuration Release --logger trx --results-directory "TestResults"

      - name: Upload .Net Test Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults

  frontend-build-test:
      needs: versioning
      name: Build And Test Frontend Project
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'
            cache: npm
            cache-dependency-path: ./src/web

        - name: Install dependencies
          working-directory: ./src/web
          run: | 
            npm install
            npm run build